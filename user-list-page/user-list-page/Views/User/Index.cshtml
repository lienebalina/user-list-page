@using System.Runtime.CompilerServices
@model IEnumerable<user_list_page.Models.User>

@{
    ViewData["PageTitle"] = "Users";
    ViewData["PageActionText"] = "Add User";
    ViewData["PageActionUrl"] = "/User/Add";

}

@* modal loga poga te *@
<button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#exampleModal">
    Add User
</button>

@if (Model.Any())
{
    <table class="table">
        <thead>
        <tr class="white">
            <th>
                @Html.DisplayName("First and Last name")
            </th>
            <th>
                @Html.DisplayName("Age")
            </th>
            <th>
                @Html.DisplayName("Action")
            </th>
        </tr>
        </thead>
        <tbody>
        @foreach (var item in Model)
        {
            <tr class="white">
                <td>
                    @Html.DisplayFor(modelItem => item.FullName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Age)
                </td>
                <td>
                    <select placeholder="Select Status" id="selectStatus" onchange="openModal(this)" AutoPostBack="true">
                        <option value="" default="" selected="">Select status</option>
                        <option value="Married">Married</option>
                        <option value="Single">Single</option>
                    </select>
                </td>
            </tr>
        }
        </tbody>
    </table>
}
else
{
    <div><h1>404</h1></div>
}

<div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Modal title</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            @using (Html.BeginForm("Add", "User", FormMethod.Post))
            {
                <div class="modal-body">

                    <div>
                        <label class="control-label">First Name</label>
                        <input name="FirstName" class="form-control"/>
                    </div>
                    <div>
                        <label class="control-label">Last Name</label>
                        <input name="LastName" class="form-control" />
                    </div>
                    <div>
                        <label class="control-label">Date Of Birth</label>
                        <input name="DateOfBirth" class="form-control" type="datetime-local" />
                    </div>

                    <label class="control-label">Phone Number</label>
                    <div style="display: flex; align-items: center;justify-content: center;">
                        <div id="phoneNumbersContainer">
                            <input name="PhoneNumbers[0].Number" class="form-control"/>
                        </div>
                        <button type="button" onclick="addPhoneNumber()" class="btn btn-primary" style="align-self: flex-start; ">+</button>
                    </div>

                    <label class="control-label">Address</label>
                    <div style="display: flex; align-items: center;justify-content: center;">
                        <div id="addressContainer">
                            <input name="Addresses[0].UserAddress" class="form-control" />
                        </div>
                        <button type="button" onclick="addAddress()" class="btn btn-primary" style="align-self: flex-start; ">+</button>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary">Add Person</button>
                </div>
            }
        </div>
    </div>
</div>

<div class="modal fade" id="marriedModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Select spouse</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div>
                    <label class="control-label">Spouse:</label>
                    <select placeholder="Select Spouse" id="selectSpouse" onchange="openModal(item)" AutoPostBack="true">
                        <option value="" default="" selected="">Select spouse</option>
                        @foreach (var item in Model){
                            <option value="@item.Id">@item.SpouseName</option>
                        }
                    </select>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="submit" class="btn btn-primary" onclick="chooseSpouse()">Save</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="singleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Single dummy popup</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div>
                    ;)
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="submit" class="btn btn-primary">Save</button>
            </div>
        </div>
    </div>
</div>

<script>
    var userId = "";

    function openModal(selectedUser) {
        var selectedValue = selectedUser.value;
        if (selectedValue == "Married") {
            $("#marriedModal").modal("show"); 
        }
        else if(selectedValue == "Single") {
            $("#singleModal").modal("show");
        }
    }

    console.log(userId);
</script>

<script>
    function chooseSpouse() {
        var chosenSpouse = $("#selectSpouse").val();
        var selectedUserId = 
        
    }
</script>

<script>
    var countNumbers = 1;

    function addPhoneNumber() {
        var container = document.getElementById('phoneNumbersContainer');
        var newPhoneNumberDiv = document.createElement('div');
        newPhoneNumberDiv.style.display = 'flex';
        newPhoneNumberDiv.style.alignItems = 'center';
        newPhoneNumberDiv.style.justifyContent = 'center'
        newPhoneNumberDiv.innerHTML = '<input name="PhoneNumbers[' + countNumbers + '].Number" class="form-control" />' +
            '<button type="button" class="btn btn-primary" style="align-self: flex-start;" onclick="removeTextbox(this)">-</button>';
        container.appendChild(newPhoneNumberDiv);
        countNumbers++;
    }
</script>

<script>
    var countAddress = 1;

    function addAddress() {
        var container = document.getElementById('addressContainer');
        var newAddressDiv = document.createElement('div');
        newAddressDiv.style.display = 'flex';
        newAddressDiv.style.alignItems = 'center';
        newAddressDiv.style.justifyContent = 'center';
        newAddressDiv.innerHTML = '<input name="Addresses[' + countAddress + '].UserAddress" class="form-control" />' +
            '<button type="button" class="btn btn-primary" style="align-self: flex-start;" onclick="removeTextbox(this)">-</button>';
        container.appendChild(newAddressDiv);
        countAddress++;
    }
</script>

<script>
    function removeTextbox(button) {
        var entry = button.parentNode;
        entry.parentNode.removeChild(entry);
    }
</script>